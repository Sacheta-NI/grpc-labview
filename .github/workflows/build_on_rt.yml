name: RT Build

on:
  workflow_call:
  workflow_dispatch:

env:
  CMAKE_VERSION: 3.18.3
  BUILD_TYPE: Release

jobs:
  build-nilrt:
    name: NILRT Cross Compile with GCC 7+
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Verify Docker
      run: docker run hello-world

    - name: Clone NILRT and Build Docker Image
      run: |
        git clone https://github.com/ni/nilrt.git
        cd nilrt
        git checkout nilrt/master/scarthgap
        git submodule update --init --recursive
        bash ./docker/create-build-nilrt.sh
        docker images | grep build-nilrt || echo "Docker image creation failed"
        
    - name: Initialize Build Environment
      run: |
        cd nilrt
        source ./ni-oe-init-build-env || exit 1
        echo "Environment initialized"

    - name: Build the Toolchain
      run: |
        source ./ni-oe-init-build-env || exit 1
        bitbake --version
        bitbake meta-toolchain || exit 1

    - name: Install the Toolchain
      run: |
        TOOLCHAIN_INSTALLER=$(find tmp-glibc/deploy/sdk -name "oecore-*.sh")
        if [ ! -f "$TOOLCHAIN_INSTALLER" ]; then
          echo "Toolchain installer not found in the expected path."
          exit 1
        fi
        chmod +x "$TOOLCHAIN_INSTALLER"
        sudo "$TOOLCHAIN_INSTALLER" -y -d "${GITHUB_WORKSPACE}/nilrt-toolchain/"
        echo "${GITHUB_WORKSPACE}/nilrt-toolchain/sysroots/x86_64-nilrtsdk-linux/usr/bin/x86_64-nilrt-linux" >> "${GITHUB_PATH}"

    - name: Update Submodules
      id: submodules
      run: |
        git submodule update --init --recursive
        echo "::set-output name=grpc-commit::$(git rev-parse --short @:./third_party/grpc)"

    - name: Cache Host OS gRPC Support
      uses: actions/cache@v4
      id: hostgrpccache
      env:
        cache-name: hostgrpccache
      with:
        path: third_party/grpc/build/
        key: ${{ github.repository }}-${{ runner.os }}-${{ env.cache-name }}-${{ steps.submodules.outputs.grpc-commit }}

    - name: Build gRPC and Install
      run: |
        cmake -S third_party/grpc -B third_party/grpc/build -D CMAKE_BUILD_TYPE=$BUILD_TYPE -D gRPC_INSTALL=ON
        cmake --build third_party/grpc/build
        sudo cmake --install third_party/grpc/build

    - name: Configure Cross Compile
      run: |
        cmake -S . -B build -D CMAKE_BUILD_TYPE=$BUILD_TYPE -D CMAKE_TOOLCHAIN_FILE=${GITHUB_WORKSPACE}/nilrt-x86_64.cmake

    - name: Cross Compile
      run: cmake --build build --config $BUILD_TYPE -j 16

    - name: Tar Build Artifacts
      run: tar -czvf liblabview-grpc-server-rt.tar.gz -C build liblabview_grpc_server.so

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: liblabview-grpc-server-rt
        path: liblabview-grpc-server-rt.tar.gz
        retention-days: 5
