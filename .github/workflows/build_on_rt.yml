name: RT Build

on:
  workflow_call:
  workflow_dispatch:

env:
  CMAKE_VERSION: 3.18.3
  BUILD_TYPE: Release

jobs:
  build-nilrt:
    name: NILRT Cross Compile with GCC 6.3.0
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Setup python3
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    # The URL used to download this toolchain may change in the future as
    # improvements to hosting and exports of the NILRT toolchain are made.
    - name: Install NI Linux RT CC Toolchain
      run: |
        wget -nv https://download.ni.com/support/softlib/labview/labview_rt/2018/Linux%20Toolchains/linux/oecore-x86_64-core2-64-toolchain-6.0.sh
        sudo chmod a+x ./oecore-x86_64-core2-64-toolchain-6.0.sh
        sudo ./oecore-x86_64-core2-64-toolchain-6.0.sh -y -d ${GITHUB_WORKSPACE}/nilrt-toolchain/
        echo "${GITHUB_WORKSPACE}/nilrt-toolchain/sysroots/x86_64-nilrtsdk-linux/usr/bin/x86_64-nilrt-linux" >> ${GITHUB_PATH}
    - name: Install GCC 10
      run: |
       sudo apt-get update
       sudo apt-get install -y gcc-10 g++-10
       sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 60 --slave /usr/bin/g++ g++ /usr/bin/g++-10
       gcc --version

    - name: Update Submodules
      id: submodules
      run: |
        git submodule update --init --recursive
        echo "::set-output name=grpc-commit::$(git rev-parse --short @:./third_party/grpc)"

    - name: Cache Host OS gRPC Support
      uses: actions/cache@v4
      id: hostgrpccache
      env:
        cache-name: hostgrpccache
      with:
        path: third_party/grpc/build/
        key: ${{ github.repository }}-${{ runner.os }}-${{ env.cache-name }}-${{ steps.submodules.outputs.grpc-commit }}

    - name: Configure Host OS gRPC Support
      if: steps.hostgrpccache.outputs.cache-hit != 'true'
      run: |
        cmake -S $GITHUB_WORKSPACE/third_party/grpc/ \
              -B $GITHUB_WORKSPACE/third_party/grpc/build \
              -D CMAKE_BUILD_TYPE=$BUILD_TYPE \
              -D gRPC_INSTALL=ON

    - name: Build Host OS gRPC Support
      if: steps.hostgrpccache.outputs.cache-hit != 'true'
      run: |
        cmake --build $GITHUB_WORKSPACE/third_party/grpc/build || { \
          echo "Build failed"; exit 1; \
        }

    - name: Install Host OS gRPC Support
      run: sudo cmake --install ${GITHUB_WORKSPACE}/third_party/grpc/build

    - name: Configure Cross Compile
      run: |
        cmake -S . -B build \
              -D CMAKE_BUILD_TYPE=$BUILD_TYPE \
              -D CMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/nilrt-x86_64.cmake

    - name: Cross Compile
      run: |
        cmake --build build --config $BUILD_TYPE -j 16 || { \
          echo "Build failed"; exit 1; \
        }

    - if: ${{always() }}
      name: Print CMakeTests logs
      run: |
        folder="${{runner.workspace}}/grpc-labview/tests/CMakeTests/logs/"

        # Check if the folder exists
        if [ ! -d "$folder" ]; then
          echo "CMakeTests log folder (grpc-labview/tests/CmakeTests/logs) does not exist."
          echo "Exiting the script."
          exit
        fi

        # Change to the folder
        cd "$folder" || exit

        # Iterate through files and print their contents
        for file in *; do
            if [ -f "$file" ]; then
                cat "$file"
                echo
            fi
        done

    - name: Tar Build Artifacts
      run: >-
        tar -czvf liblabview-grpc-server-rt.tar.gz -C ${GITHUB_WORKSPACE}/build liblabview_grpc_server.so

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: liblabview-grpc-server-rt
        path: liblabview-grpc-server-rt.tar.gz
        retention-days: 5
